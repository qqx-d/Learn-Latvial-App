const translations = {
  ru: {
    title: "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —Å–ª–æ–≤",
    addWordTitle: "–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ",
    translation: "–ü–µ—Ä–µ–≤–æ–¥",
    add: "–î–æ–±–∞–≤–∏—Ç—å",
    manage: "–£–ø—Ä–∞–≤–ª—è—Ç—å —Å–ª–æ–≤–∞–º–∏",
    listTitle: "–°–ø–∏—Å–æ–∫ —Å–ª–æ–≤",
    delete: "–£–¥–∞–ª–∏—Ç—å",
    check: "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
    noWords: "–ù–µ—Ç —Å–ª–æ–≤. –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–µ –Ω–∏–∂–µ.",
    trainer: "–ó–∞–≥—Ä—É–∑–∫–∞...",
    settings: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
    settingsTitle: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
    apply: "–ü—Ä–∏–º–µ–Ω–∏—Ç—å",
    reset: "–°–±—Ä–æ—Å–∏—Ç—å",
    nouns: "–°—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ",
    verbs: "–ì–ª–∞–≥–æ–ª—ã",
    adjectives: "–ü—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ",
    mode_ru2lv: "–° —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ –ª–∞—Ç—ã—à—Å–∫–∏–π",
    mode_lv2ru: "–° –ª–∞—Ç—ã—à—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π",
    mode_both: "–í—Å–µ –≤–º–µ—Å—Ç–µ",
    randomAll: "–°–ª—É—á–∞–π–Ω—ã–µ —Å–ª–æ–≤–∞",
    skip: "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
    trainerTab: "–°–ª–æ–≤–∞",
    manageTab: "–°–∫–ª–æ–Ω–µ–Ω–∏—è",
    settingsTab: "üîí",
    noWords: "–ù–µ—Ç —Å–ª–æ–≤",
    delete: "–£–¥–∞–ª–∏—Ç—å",
    decl1: "1 —Å–∫–ª–æ–Ω–µ–Ω–∏–µ",
    decl2: "2 —Å–∫–ª–æ–Ω–µ–Ω–∏–µ",
    decl3: "3 —Å–∫–ª–æ–Ω–µ–Ω–∏–µ",
    decl4: "4 —Å–∫–ª–æ–Ω–µ–Ω–∏–µ",
    decl5: "5 —Å–∫–ª–æ–Ω–µ–Ω–∏–µ",
    decl6: "6 —Å–∫–ª–æ–Ω–µ–Ω–∏–µ",
  },
  en: {
    title: "Word Trainer",
    addWordTitle: "Add word",

    translation: "Translation",
    add: "Add",
    manage: "Manage words",
    listTitle: "Word list",
    delete: "Delete",
    check: "Check",
    noWords: "No words yet. Add new ones below.",
    trainer: "Loading...",
    settings: "Settings",
    settingsTitle: "Settings",
    apply: "Apply",
    reset: "Reset",
    nouns: "Nouns",
    verbs: "Verbs",
    adjectives: "Adjectives",
    mode_ru2lv: "From Russian to Latvian",
    mode_lv2ru: "From Latvian to Russian",
    mode_both: "Mixed",
    randomAll: "Random words",
    skip: "Skip",
    trainerTab: "Words",
    manageTab: "Declensions",
    settingsTab: "üîí",
    noWords: "No words",
    delete: "Delete",
    decl1: "1st declension",
    decl2: "2nd declension",
    decl3: "3rd declension",
    decl4: "4th declension",
    decl5: "5th declension",
    decl6: "6th declension",
  },
  lv: {
    title: "VƒÅrdu treni≈Ü≈°",
    addWordTitle: "Pievienot vƒÅrdu",
    translation: "Tulkojums",
    add: "Pievienot",
    manage: "PƒÅrvaldƒ´t vƒÅrdus",
    listTitle: "VƒÅrdu saraksts",
    delete: "Dzƒìst",
    check: "PƒÅrbaudƒ´t",
    noWords: "Nav vƒÅrdu. Pievienojiet jaunus zemƒÅk.",
    trainer: "IelƒÅde...",
    settings: "Iestatƒ´jumi",
    settingsTitle: "Iestatƒ´jumi",
    apply: "ApstiprinƒÅt",
    reset: "Atiestatƒ´t",
    nouns: "LietvƒÅrdi",
    verbs: "Darbƒ´bas vƒÅrdi",
    adjectives: "ƒ™pa≈°ƒ´bas vƒÅrdi",
    mode_ru2lv: "No krievu uz latvie≈°u",
    mode_lv2ru: "No latvie≈°u uz krievu",
    mode_both: "Abi kopƒÅ",
    randomAll: "Nejau≈°i vƒÅrdi",
    skip: "Izlaist",
    trainerTab: "VƒÅrdi",
    manageTab: "Locƒ´jumi",
    settingsTab: "üîí",
    noWords: "Nav vƒÅrdu",
    delete: "Dzƒìst",
    decl1: "1. deklinƒÅcija",
    decl2: "2. deklinƒÅcija",
    decl3: "3. deklinƒÅcija",
    decl4: "4. deklinƒÅcija",
    decl5: "5. deklinƒÅcija",
    decl6: "6. deklinƒÅcija",
  }
};

let currentLang = localStorage.getItem("lang") || "ru";

function t(key) {
  return translations[currentLang][key] || key;
}

function setLang(lang) {
  currentLang = lang;
  localStorage.setItem("lang", lang);
  document.getElementById("lang-btn").innerText = lang.toUpperCase();
  applyTranslations();
  showWord();
}

function toggleLang() {
  currentLang = currentLang === "ru" ? "en" : currentLang === "en" ? "lv" : "ru";
  localStorage.setItem("lang", currentLang);

  const langBtn = document.getElementById("lang-btn");
  if (langBtn) {
    langBtn.innerText = currentLang.toUpperCase();
  }

  applyTranslations();

  if (typeof renderWordList === "function") {
    renderWordList();
  }
  if (typeof showWord === "function") {
    showWord();
  }
}

function applyTranslations() {
  document.getElementById("title").innerText = t("title");
  document.getElementById("add-title").innerText = t("addWordTitle");
  document.getElementById("word").placeholder = t("word");
  document.getElementById("translation").placeholder = t("translation");
  document.getElementById("add-btn").innerText = t("add");
  document.getElementById("manage-btn").innerText = t("manage");
  document.getElementById("settings-btn").innerText = t("settings");
  document.getElementById("list-title").innerText = t("listTitle");
  document.getElementById("trainer").innerText = t("trainer");
  document.getElementById("settings-title").innerText = t("settingsTitle");
  document.getElementById("apply-btn").innerText = t("apply");
  document.getElementById("reset-btn").innerText = t("reset");

  document.querySelector("#type-select .options [data-value='nouns']").innerText = t("nouns");
  document.querySelector("#type-select .options [data-value='verbs']").innerText = t("verbs");
  document.querySelector("#type-select .options [data-value='adjectives']").innerText = t("adjectives");

  document.getElementById("tab-trainer").innerText = t("trainerTab");
  document.getElementById("tab-manage").innerText = t("manageTab");
  document.getElementById("tab-settings").innerText = t("settingsTab");

  const selectedType = document.querySelector("#type-select .selected");
  if (selectedType) {
    const current = selectedType.getAttribute("data-value");
    if (current) selectedType.innerText = t(current);
  }

  document.querySelector("#mode-select .options [data-value='ru2lv']").innerText = t("mode_ru2lv");
  document.querySelector("#mode-select .options [data-value='lv2ru']").innerText = t("mode_lv2ru");
  document.querySelector("#mode-select .options [data-value='both']").innerText  = t("mode_both");

  const selectedMode = document.querySelector("#mode-select .selected");
  if (selectedMode) {
    const current = selectedMode.getAttribute("data-value");
    if (current) selectedMode.innerText = t("mode_" + current);
  }

  document.querySelector("#level-select .options [data-value='randomAll']").innerText = t("randomAll");

  const selectedLevel = document.querySelector("#level-select .selected");
  if (selectedLevel) {
    const current = selectedLevel.getAttribute("data-value");
    if (current === "randomAll") {
      selectedLevel.innerText = t("randomAll");
    } else {
      selectedLevel.innerText = current.toUpperCase();
    }
  }

  const langBtn = document.getElementById("lang-btn");
  if (langBtn) {
    langBtn.textContent = currentLang.toUpperCase();
  }

  for (let i = 1; i <= 6; i++) {
    const btn = document.getElementById("decl-btn-" + i);
    if (btn) btn.innerText = t("decl" + i);
  }
}